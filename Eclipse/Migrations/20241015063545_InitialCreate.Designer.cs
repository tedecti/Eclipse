// <auto-generated />
using System;
using Eclipse.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Eclipse.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241015063545_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Eclipse.Models.ChatRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MessageId")
                        .IsRequired()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PinnedMessageId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PinnedMessageId1")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserId1")
                        .IsRequired()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserId2")
                        .IsRequired()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PinnedMessageId1");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.HasIndex("UserId2");

                    b.ToTable("ChatRoom");
                });

            modelBuilder.Entity("Eclipse.Models.Conference", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ConferencePicture")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("MemberCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Conference");
                });

            modelBuilder.Entity("Eclipse.Models.ConferenceMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ConferenceId")
                        .IsRequired()
                        .HasColumnType("uuid");

                    b.Property<bool?>("IsAdmin")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("MemberId")
                        .IsRequired()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ConferenceId");

                    b.HasIndex("MemberId");

                    b.ToTable("ConferenceMember");
                });

            modelBuilder.Entity("Eclipse.Models.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChatRoomId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean");

                    b.Property<string>("MessageText")
                        .HasColumnType("text");

                    b.Property<string>("ReactionId")
                        .HasColumnType("text");

                    b.Property<string>("ReplyId")
                        .HasColumnType("text");

                    b.Property<Guid?>("SenderId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ChatRoomId");

                    b.HasIndex("SenderId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("Eclipse.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pfp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Eclipse.Models.ChatRoom", b =>
                {
                    b.HasOne("Eclipse.Models.Message", "PinnedMessage")
                        .WithMany()
                        .HasForeignKey("PinnedMessageId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eclipse.Models.User", null)
                        .WithMany("ChatRooms")
                        .HasForeignKey("UserId");

                    b.HasOne("Eclipse.Models.User", "User1")
                        .WithMany()
                        .HasForeignKey("UserId1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Eclipse.Models.User", "User2")
                        .WithMany()
                        .HasForeignKey("UserId2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PinnedMessage");

                    b.Navigation("User1");

                    b.Navigation("User2");
                });

            modelBuilder.Entity("Eclipse.Models.ConferenceMember", b =>
                {
                    b.HasOne("Eclipse.Models.Conference", "Conference")
                        .WithMany("ConferenceMembers")
                        .HasForeignKey("ConferenceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Eclipse.Models.User", "Member")
                        .WithMany("ConferenceMembers")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Conference");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Eclipse.Models.Message", b =>
                {
                    b.HasOne("Eclipse.Models.ChatRoom", "ChatRoom")
                        .WithMany("Messages")
                        .HasForeignKey("ChatRoomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Eclipse.Models.User", "Sender")
                        .WithMany("Messages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ChatRoom");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Eclipse.Models.ChatRoom", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Eclipse.Models.Conference", b =>
                {
                    b.Navigation("ConferenceMembers");
                });

            modelBuilder.Entity("Eclipse.Models.User", b =>
                {
                    b.Navigation("ChatRooms");

                    b.Navigation("ConferenceMembers");

                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
